[stdio string]
["strlist.h"]

"extern int yylex();"
"extern int yyparse();"
"extern FILE* yyin;"

(var infile char*)

(var INCLUDE_LIST StrList_t)
(var C_SNIPPET_LIST StrList_t)
(var STRUCT_FORWARD_LIST StrList_t)
(var STRUCT_LIST StrList_t)
(var GLOBAL_VAR_LIST StrList_t)
(var FUNC_FORWARD_LIST StrList_t)
(var FUNC_LIST StrList_t)

(func main ((argc int) (argv char**)) int
    (if (|| (== argc 1)  (&& (== argc 2) (|| (! $ strcmp [argv 1] "-h") (! $ strcmp [argv 1] "--help"))))
        (do
            (puts "Usage: func <output .c file> <input FunC file(s)...>")
            (return 0)
        )
    )

    (if (< argc 3)
        (do
            (fprintf stderr "Invalid number of command-line arguments (expected at least 2, got %d)\n" (- argc 1))
            (return $ -1)
        )
    )

    (= INCLUDE_LIST $ StrList_ctor)
    (= STRUCT_FORWARD_LIST $ StrList_ctor)
    (= STRUCT_LIST $ StrList_ctor)
    (= GLOBAL_VAR_LIST $ StrList_ctor)
    (= FUNC_FORWARD_LIST $ StrList_ctor)
    (= FUNC_LIST $ StrList_ctor)

    (for i .. 2 .. argc
        (if (! $ = yyin $ fopen (= infile [argv i]) "r")
            (do
                (fprintf stderr "Unable to open input file: \"%s\"\n" infile)
                (return $ -1)
            )
        )

        (yyparse)
        (fclose yyin)
    )

    (var fc FILE* $ fopen [argv 1] "w")
    (if (! fc)
        (do
            (fprintf stderr "Unable to open output .c file: \"%s\"\n" [argv 1])
            (return $ -1)
        )
    )

    (StrList_fjoin [* INCLUDE_LIST] fc "\n")
    (fputs "\n\n" fc)

    (StrList_fjoin [* C_SNIPPET_LIST] fc "\n\n")
    (fputs "\n\n" fc)

    (StrList_fjoin [* STRUCT_FORWARD_LIST] fc "\n")
    (fputs "\n\n" fc)

    (StrList_fjoin [* STRUCT_LIST] fc "\n\n")
    (fputs "\n\n" fc)

    (StrList_fjoin [* GLOBAL_VAR_LIST] fc "\n")
    (fputs "\n\n" fc)

    (StrList_fjoin [* FUNC_FORWARD_LIST] fc "\n")
    (fputs "\n\n" fc)

    (StrList_fjoin [* FUNC_LIST] fc "\n\n")
    (fputs "\n" fc)

    (fclose fc)

    (StrList_dtor [* INCLUDE_LIST])
    (StrList_dtor [* C_SNIPPET_LIST])
    (StrList_dtor [* STRUCT_FORWARD_LIST])
    (StrList_dtor [* STRUCT_LIST])
    (StrList_dtor [* GLOBAL_VAR_LIST])
    (StrList_dtor [* FUNC_FORWARD_LIST])
    (StrList_dtor [* FUNC_LIST])
)
