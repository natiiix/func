[stdio string]

(func main ((argc int) (argv **char)) int
    (puts [argv])
    (printf "[...%s]\n" [* [argv] 3])

    (if (> argc 1)
        (do
            (var i int 0)
            (while (> argc $ ++ i)
                (printf "%s\n" [argv i])
            )
        )
        (puts "Hello World!")
    )

    (var myFact (int)int fact)

    (printf "%d\n" (myFact 10))

    // (printf "%d\n" (< 1))
    (printf "%d\n" (< 1 2))
    (printf "%d\n" (< 1 2 3))
    (printf "%d\n" (< 1 2 3 4))
    (printf "%d\n" (< 1 2 3 4 5))

    // (printf "%d\n" (+ 1))
    (printf "%d\n" (+ 1 2))
    (printf "%d\n" (+ 1 2 3))
    (printf "%d\n" (+ 1 2 3 4))
    (printf "%d\n" (+ 1 2 3 4 5))

    (printf "%d\n" (! $ ! $ + 1 2 3 4 5))
    (printf "%d\n" (!= 1 2 3 4 5))

    (var s String_t (str_ctor "Hello World!"))
    (printf "\"%s\" -- length: %lu\n" s.ptr s.length)

    (var p *String_t [* s])
    (printf "\"%s\" -- length: %lu\n" p.[ptr] p.[length])

    (for (var i int 0) (< i 4) (++ i)
        (printf "FOR [0] %d\n" i)
    )

    (for i .. 3
        (printf "FOR [1] %d\n" i)
    )

    (for i .. 5 .. 8
        (printf "FOR [2] %d\n" i)
    )

    (return 0)
)

(func fact (n int) int $
    (< n 0)
        0
    (< 0 n 2)
        1
        (* n $ fact $ - n 1)
)

(struct String_t
    (ptr *char)
    (length size_t)
)

(func str_ctor (str *char) String_t
    (return { String_t
        (ptr str)
        (length $ strlen str)
    })
)
